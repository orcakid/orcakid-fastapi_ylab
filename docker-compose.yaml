version: '3.9'

services:
  db:
    container_name: db_menu
    image: postgres:15.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT}:5432"
    networks:
      - web_api
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d y_lab_fastapi"]
      interval: 10s
      timeout: 5s
      retries: 5


  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "alembic upgrade head && uvicorn my_api.main:app --reload --workers 1 --host 0.0.0.0 --port 8000"
    volumes:
      - .:/app
    ports:
      - 8000:8000
    networks:
      - web_api
    environment:
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT}

    depends_on:
      # - db
      # - redis
      db:
        condition: service_healthy

  redis:
    image: redis
    container_name: 'redis-server'
    restart: unless-stopped
    ports:
      - "6379:6379"
    networks:
      - web_api
    command: [ "redis-server"]





networks:
  web_api:
    name: web_api
    driver: bridge
