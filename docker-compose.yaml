version: '3.9'

services:
  db:
    image: postgres:15.1-alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "5432:5432"
    networks:
      - web_2_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d y_lab_fastapi"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    #restart: unless-stopped
    # deploy:
    #   resources:
    #     limits:
    #       cpus: '1'
    #       memory: 4G



  app:
    build:
      context: .
      dockerfile: Dockerfile
    command: sh -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    # command: bash -c "alembic upgrade head && uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/app
    networks:
    - web_2_network
    ports:
      - "8000:8000"
    depends_on:
    - db
    restart: always
    environment:
      - DADABSE_URL=${DADABSE_URL}

networks:
  web_2_network:
    name: web_2_network
    driver: bridge

































# version: '3.8'
# services:

#   web_2_app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#     entrypoint: >
#       sh -c "
#       alembic upgrade head &&
#       uvicorn main:app --host 0.0.0.0 --reload
#       "
#     networks:
#     - web_2_network
#     ports:
#       - "8000:80"
#     depends_on:
#       post_db:
#         condition: service_healthy


#   post_db:
#     image: postgres:15.1-alpine
#     restart: always
#     environment:
#       POSTGRES_USER: 'postgres'
#       POSTGRES_PASSWORD: 'orca123'
#     expose:
#       - 5432
#     ports:
#       - "8080:5432"
#     networks:
#       - web_2_network
#     healthcheck:
#       test: wget --no-verbose --tries=1 --spider http://localhost:5432 || exit 1
#       interval: 5s
#       retries: 100
#       timeout: 20s
    


# networks:
#   web_2_network:
#     name: web_2_network